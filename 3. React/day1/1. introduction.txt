React: js library  for building user interfaces, primarily for single-page applications where you need a fast, interactive experience.
 developed and maintained by facebook along with a community of individual developers and companies.

Key Features of React:

Component-Based:
React is built around the concept of components. Components are the building blocks of a React application. 
Each component represents a part of the user interface, and you can nest components within other components to create complex UIs.


Declarative:
React enables you to describe how your UI should look based on the current state.
When the state of your application changes, React updates and renders the necessary components efficiently.


Virtual DOM:
React uses a virtual DOM to improve performance. The virtual DOM is a lightweight representation of the actual DOM. 
React updates the virtual DOM first and then reconciles it with the actual DOM, making updates faster and more efficient.


One-Way Data Binding:
React employs one-way data binding, which means data flows in a single direction. 
This makes it easier to understand and debug your applications as data moves from parent to child components.


JSX: .js, .jsx
JSX is a syntax extension for JavaScript that looks similar to XML or HTML.
 It allows you to write HTML-like code within JavaScript, making it easier to create React components.


Why Use React?

Performance:
The virtual DOM and efficient diffing algorithm ensure that updates to the UI are fast and minimal,
 resulting in better performance, especially for complex applications.


Reusability:
Components in React are reusable. You can create a component once and use it multiple times in different parts of your application, 
which helps maintain consistency and reduces code duplication.


Maintainability:
The component-based architecture of React makes it easier to manage and maintain your code. Each component is self-contained and can be tested independently.


Ecosystem and Community:
React has a large and active community. There are numerous libraries, tools, and resources available to help you build and 
optimize your React applications. The React ecosystem includes popular tools like Redux for state management and React Router for routing.


Cross-Platform Development:
With React Native, you can use React to build mobile applications for iOS and Android using the same principles and a similar codebase,
 promoting code reuse and a unified development experience.

